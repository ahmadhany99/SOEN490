// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Login in successfully ', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Login in successfully ', async function() {
    // Test name: Login in successfully 
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("http://localhost:3000/")
    // 2 | setWindowSize | 1552x832 | 
    await driver.manage().window().setRect({ width: 1552, height: 832 })
    // 3 | click | id=email | 
    await driver.findElement(By.id("email")).click()
    // 4 | type | id=email | hanyelbob99@gmail.com
    await driver.findElement(By.id("email")).sendKeys("hanyelbob99@gmail.com")
    // 5 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 6 | type | id=password | capstone123
    await driver.findElement(By.id("password")).sendKeys("capstone123")
    // 7 | click | id=btn | 
    await driver.findElement(By.id("btn")).click()
    // 8 | click | css=.Unapproved | 
    await driver.findElement(By.css(".Unapproved")).click()
    // 9 | click | css=.Approved | 
    await driver.findElement(By.css(".Approved")).click()
    // 10 | click | css=.Unapproved | 
    await driver.findElement(By.css(".Unapproved")).click()
    // 11 | click | css=.eventColumn:nth-child(1) > .eventImg | 
    await driver.findElement(By.css(".eventColumn:nth-child(1) > .eventImg")).click()
    // 12 | assertElementPresent | css=.details | 
    {
      const elements = await driver.findElements(By.css(".details"))
      assert(elements.length)
    }
  })
})
